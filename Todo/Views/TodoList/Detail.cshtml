@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>
        <li class="list-group-item">
            @{
                var showHiddenOnClick = !Model.HideCompleted;
                var orderByRankOnClick = !Model.OrderByRank;
                var orderProperty = Model.OrderByRank ? "Importance" : "Rank";
            }
            <a id="checkbox" asp-action="Detail" 
               asp-route-todoListId="@Model.TodoListId" 
               asp-route-hideCompleted="@showHiddenOnClick"
               asp-route-orderByRank="@Model.OrderByRank">
                <input type="checkbox" 
                       asp-for="@Model.HideCompleted" 
                       onchange="document.getElementById('checkbox').click();"/> 
                @Html.DisplayNameFor(m => m.HideCompleted)
            </a>
            <text class="col-md-offset-1"></text>
            <a asp-action="Detail" 
               asp-route-todoListId="@Model.TodoListId" 
               asp-route-hideCompleted="@Model.HideCompleted"
               asp-route-orderByRank="@orderByRankOnClick">
                <text>Order by @orderProperty</text>
            </a>
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">

                <div class="row">

                    <div class="col-md-8">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <strong>@item.Title</strong>
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.DisplayName
                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>
                            <text>@Html.DisplayNameFor(m => item.Rank): @item.Rank</text>
                        </small>
                    </div>
                </div>

            </li>
        }
    </ul>
</div>